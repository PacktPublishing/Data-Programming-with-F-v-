[
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1130",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1130/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1130/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1130/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1130",
    "id": 298576869,
    "number": 1130,
    "title": "Descendants and CssSelect do not take all elements corectly",
    "user": {
      "login": "cSharpProCompany",
      "id": 25929611,
      "avatar_url": "https://avatars1.githubusercontent.com/u/25929611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cSharpProCompany",
      "html_url": "https://github.com/cSharpProCompany",
      "followers_url": "https://api.github.com/users/cSharpProCompany/followers",
      "following_url": "https://api.github.com/users/cSharpProCompany/following{/other_user}",
      "gists_url": "https://api.github.com/users/cSharpProCompany/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cSharpProCompany/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cSharpProCompany/subscriptions",
      "organizations_url": "https://api.github.com/users/cSharpProCompany/orgs",
      "repos_url": "https://api.github.com/users/cSharpProCompany/repos",
      "events_url": "https://api.github.com/users/cSharpProCompany/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cSharpProCompany/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-02-20T12:30:49Z",
    "updated_at": "2018-02-21T12:37:58Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "https://www.amazon.com/s/ref=lp_1_nr_n_0?fst=as%3Aoff&rh=n%3A283155%2Cn%3A%211000%2Cn%3A1%2Cn%3A173508&bbn=1&ie=UTF8&qid=1519043803&rnid=1\r\n\r\ntry to select all \"ul\". it will find always random count of \"ul\" elements within interval 12-19, but page always contain exactly 38 ULs.\r\n\r\nor simply run this code\r\n\r\n```\r\nopen System.Net\r\nopen System\r\nopen System.IO\r\nopen FSharp.Data\r\n// Fetch the contents of a web page\r\nlet fetchUrl callback url =        \r\n    let req = WebRequest.Create(Uri(url)) :?> HttpWebRequest \r\n    req.UserAgent <- \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2\";\r\n\r\n    use resp = req.GetResponse() \r\n    use stream = resp.GetResponseStream() \r\n    use reader = new IO.StreamReader(stream)\r\n    callback reader url\r\n\r\nlet GetStreamUrl pReauest pUrlBuilder pUrlPart =\r\n    let fullUrl:string = pUrlBuilder pUrlPart\r\n    pReauest fullUrl\r\n    \r\n\r\nlet myCallback (reader:IO.StreamReader) url = \r\n    let html = reader.ReadToEnd()\r\n    let html1000 = html.Substring(0,1000)\r\n    printfn \"Downloaded %s. First 1000 is %s\" url html1000\r\n    html      // return all the html\r\n\r\nlet GetLinkNameUrl pGetStreamUrl pUrlPart name listT = \r\n    let pUrlSteam:string = pGetStreamUrl pUrlPart\r\n    let doc = HtmlDocument.Parse pUrlSteam\r\n    let desc = doc.Descendants \"ul\"\r\n    let css = doc.CssSelect \"ul\"\r\n    \"\"\r\n\r\nlet FullUrl l r = \r\n    sprintf \"%s%s\" l r\r\n[<EntryPoint>]\r\nlet main argv = \r\n    let baseUrl = \"https://www.amazon.com\"\r\n    let url =  GetLinkNameUrl \r\n                (GetStreamUrl (fetchUrl myCallback) (FullUrl baseUrl))  \r\n                \"/s/ref=lp_1_nr_n_0?fst=as%3Aoff&rh=n%3A283155%2Cn%3A%211000%2Cn%3A1%2Cn%3A173508&bbn=1&ie=UTF8&qid=1519043803&rnid=1\"\r\n                \"123\" \r\n                List.empty\r\n               \r\n    printfn \"%A\" argv\r\n    0 // return an integer exit code\r\n\r\n```\r\n\r\n    let desc = doc.Descendants \"ul\"\r\n    let css = doc.CssSelect \"ul\"\r\n\r\nshould contains 38 elements."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1125",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1125/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1125/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1125/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/pull/1125",
    "id": 294814047,
    "number": 1125,
    "title": "Xsd Support (via @giacomociti)",
    "user": {
      "login": "baronfel",
      "id": 573979,
      "avatar_url": "https://avatars3.githubusercontent.com/u/573979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baronfel",
      "html_url": "https://github.com/baronfel",
      "followers_url": "https://api.github.com/users/baronfel/followers",
      "following_url": "https://api.github.com/users/baronfel/following{/other_user}",
      "gists_url": "https://api.github.com/users/baronfel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baronfel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baronfel/subscriptions",
      "organizations_url": "https://api.github.com/users/baronfel/orgs",
      "repos_url": "https://api.github.com/users/baronfel/repos",
      "events_url": "https://api.github.com/users/baronfel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baronfel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-02-06T16:02:25Z",
    "updated_at": "2018-02-20T17:33:54Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/fsharp/FSharp.Data/pulls/1125",
      "html_url": "https://github.com/fsharp/FSharp.Data/pull/1125",
      "diff_url": "https://github.com/fsharp/FSharp.Data/pull/1125.diff",
      "patch_url": "https://github.com/fsharp/FSharp.Data/pull/1125.patch"
    },
    "body": "This is just #1004 rebased on top of latest master."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1123",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1123/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1123/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1123/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1123",
    "id": 292038014,
    "number": 1123,
    "title": "Unexpected System.ArgumentException",
    "user": {
      "login": "marty-stranger",
      "id": 2090529,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2090529?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marty-stranger",
      "html_url": "https://github.com/marty-stranger",
      "followers_url": "https://api.github.com/users/marty-stranger/followers",
      "following_url": "https://api.github.com/users/marty-stranger/following{/other_user}",
      "gists_url": "https://api.github.com/users/marty-stranger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marty-stranger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marty-stranger/subscriptions",
      "organizations_url": "https://api.github.com/users/marty-stranger/orgs",
      "repos_url": "https://api.github.com/users/marty-stranger/repos",
      "events_url": "https://api.github.com/users/marty-stranger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marty-stranger/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-01-26T21:32:54Z",
    "updated_at": "2018-02-06T15:27:34Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "some requests  fails with\r\n```\r\nSystem.ArgumentException: Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection.\r\n   at FSharp.Data.HttpHelpers.augmentWebExceptionsWithDetails@1207-2.Invoke(Exception _arg1)\r\n   at Microsoft.FSharp.Control.AsyncBuilderImpl.callA@839.Invoke(AsyncParams`1 args)\r\n```\r\n\r\nusage\r\n```\r\nlet body = req.Body |> Json.formatWith JsonFormattingOptions.Compact |> HttpRequestBody.TextRequest\r\nlet res = Http.RequestString(url=req.Url, httpMethod = \"POST\", body = body)\r\n```\r\n\r\nno specific pattern observed. replaced with .net core http library\r\n\r\n```\r\nlet body = lpreq.Body |> Json.formatWith JsonFormattingOptions.Compact\r\nlet req = HttpWebRequest.Create(lpreq.Url) :?> HttpWebRequest \r\nreq.ProtocolVersion <- HttpVersion.Version10\r\nreq.Method <- \"POST\"\r\nlet postBytes = Encoding.ASCII.GetBytes(body)\r\nreq.ContentType <- \"application/json\"\r\nreq.ContentLength <- int64 postBytes.Length\r\n\r\nlet reqStream = req.GetRequestStream() \r\nreqStream.Write(postBytes, 0, postBytes.Length);\r\nreqStream.Close()\r\n\r\nlet resp = req.GetResponse() \r\nlet stream = resp.GetResponseStream() \r\nlet reader = new StreamReader(stream) \r\nlet res = reader.ReadToEnd()\r\n```\r\neverything is fine. looks like some internal bug!?\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1118",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1118/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1118/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1118/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/pull/1118",
    "id": 285357825,
    "number": 1118,
    "title": "[WIP] Add a netstandard2.0 build and update packaging",
    "user": {
      "login": "baronfel",
      "id": 573979,
      "avatar_url": "https://avatars3.githubusercontent.com/u/573979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baronfel",
      "html_url": "https://github.com/baronfel",
      "followers_url": "https://api.github.com/users/baronfel/followers",
      "following_url": "https://api.github.com/users/baronfel/following{/other_user}",
      "gists_url": "https://api.github.com/users/baronfel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baronfel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baronfel/subscriptions",
      "organizations_url": "https://api.github.com/users/baronfel/orgs",
      "repos_url": "https://api.github.com/users/baronfel/repos",
      "events_url": "https://api.github.com/users/baronfel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baronfel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-01-02T05:30:35Z",
    "updated_at": "2018-01-02T16:39:39Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/fsharp/FSharp.Data/pulls/1118",
      "html_url": "https://github.com/fsharp/FSharp.Data/pull/1118",
      "diff_url": "https://github.com/fsharp/FSharp.Data/pull/1118.diff",
      "patch_url": "https://github.com/fsharp/FSharp.Data/pull/1118.patch"
    },
    "body": "This does about 90% of what we want it to, I think.\r\n\r\nThe bits that aren't able to run on netstandard are conditionally-compiled out, and all the netstandard-specific builds are kept in a netcore solution file for easy building.\r\n\r\nA new fake build task builds the netcore stuff and the nuspec has been updated with the appropriate version constraints.\r\n\r\nSadly it appears we have to maintain this two-solution approach because the PCL versions of FSharp.Core have been dropped as of somewhere around FSharp.Core version 4.1.17 or 18, so we need an old-project-file-style build to handle building PCLs. \r\n\r\nBonus points, and something I tried very hard to do, was get some subset of the tests building on .Net standard 2.0 as well.  I ran into problems here because of Nancy dependencies not playing nicely, so perhaps an enhancement to switch the test server over to Suave?"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1116",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1116/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1116/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1116/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1116",
    "id": 285133236,
    "number": 1116,
    "title": "[Packaging] Provide Nuget package(s) with just the parsing/helpers",
    "user": {
      "login": "baronfel",
      "id": 573979,
      "avatar_url": "https://avatars3.githubusercontent.com/u/573979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baronfel",
      "html_url": "https://github.com/baronfel",
      "followers_url": "https://api.github.com/users/baronfel/followers",
      "following_url": "https://api.github.com/users/baronfel/following{/other_user}",
      "gists_url": "https://api.github.com/users/baronfel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baronfel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baronfel/subscriptions",
      "organizations_url": "https://api.github.com/users/baronfel/orgs",
      "repos_url": "https://api.github.com/users/baronfel/repos",
      "events_url": "https://api.github.com/users/baronfel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baronfel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-12-29T18:07:46Z",
    "updated_at": "2018-01-08T16:31:33Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "I've seen comments echoed in a few places that in lieu of being able to use the full providers on netcore and such that it would be useful to be able to just reference the parsing and utility methods. While it is possible now to Paket-file-include the relevant files, it might be nice to provide those in a nuget package that could be referenced individually as well.\r\n\r\nRelevant questions:\r\n\r\n- What frameworks? Are we at a point where we can just target netstandard2.0 and expect new users to default to that?\r\n- Can the provider Nugets be made dependent on these new Nugets, or should they use the existing embedding?\r\n- How should any new packages be organized? \r\n  * FSharp.Data.Csv: with CsvFile and CsvReader?\r\n  * FSharp.Data.Net (or HTTP?): with UriUtils and Http?\r\n  * FSharp.Data.Json: JsonValue/JsonParser/JsonExtensions?\r\n  * FSharp.Data.Html: HtmlCharRefs/HtmlParser/HtmlOperations/HtmlCssSelectors/HtmlTypes from HtmlRuntime.fs?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1115",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1115/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1115/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1115/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1115",
    "id": 284754365,
    "number": 1115,
    "title": "Comments are lost when processing XML files with XmlProvider",
    "user": {
      "login": "ovatsus",
      "id": 738761,
      "avatar_url": "https://avatars1.githubusercontent.com/u/738761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ovatsus",
      "html_url": "https://github.com/ovatsus",
      "followers_url": "https://api.github.com/users/ovatsus/followers",
      "following_url": "https://api.github.com/users/ovatsus/following{/other_user}",
      "gists_url": "https://api.github.com/users/ovatsus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ovatsus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ovatsus/subscriptions",
      "organizations_url": "https://api.github.com/users/ovatsus/orgs",
      "repos_url": "https://api.github.com/users/ovatsus/repos",
      "events_url": "https://api.github.com/users/ovatsus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ovatsus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-12-27T16:27:01Z",
    "updated_at": "2017-12-27T16:27:01Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Use case, move resources from one resx to another:\r\n\r\nExample:\r\n\r\n      #r \"System.Xml.Linq\"\r\n      #r \"packages/FSharp.Data/lib/net45/FSharp.data.dll\"\r\n      open System.IO\r\n      open FSharp.Data\r\n\r\n      type ResXT = XmlProvider<\"../src/Resources/xxx.resx\">\r\n\r\n      let inputs = Directory.GetFiles(__SOURCE_DIRECTORY__.Replace(\"Scripts\", \"\") + \"src\\\\Resources\", \"xxx*.resx\")\r\n      let outputs = Directory.GetFiles(__SOURCE_DIRECTORY__.Replace(\"Scripts\", \"\") + \"src\\\\Resources\", \"yyy*.resx\")\r\n\r\n      let getLanguage (filename: string) =\r\n          filename.Split [|'.'|] |> Array.skip 1 |> Array.filter ((<>) \"resx\")\r\n\r\n      let shouldTransferResource (name: string) = (...)\r\n\r\n      let transfer inputFilename = \r\n          let lang = getLanguage inputFilename\r\n          let outputFilename = outputs |> Array.tryFind (getLanguage >> ((=) lang))\r\n          match outputFilename with\r\n          | None -> ()\r\n          | Some outputFilename ->\r\n              let inputFile = ResXT.Load(inputFilename)\r\n              let outputFile = ResXT.Load(outputFilename)\r\n              let itemsToMigrate = inputFile.Datas |> Array.filter (fun elem -> shouldTransferResource elem.Name)\r\n              if itemsToMigrate.Length > 0 then\r\n                  let modifiedInput = ResXT.Root(inputFile.Schema, inputFile.Resheaders, inputFile.Datas |> Array.filter (fun elem -> not (shouldTransferResource elem.Name)))\r\n                  let modifiedOutput = ResXT.Root(outputFile.Schema, outputFile.Resheaders, Array.append outputFile.Datas itemsToMigrate)\r\n                  File.WriteAllText(inputFilename, modifiedInput.ToString())\r\n                  File.WriteAllText(outputFilename, modifiedOutput.ToString())\r\n\r\n      for inputFilename in inputs do\r\n          transfer inputFilename\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1114",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1114/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1114/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1114/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1114",
    "id": 280837922,
    "number": 1114,
    "title": "Replace FSharp.Charting with XPlot in documentation and examples",
    "user": {
      "login": "ovatsus",
      "id": 738761,
      "avatar_url": "https://avatars1.githubusercontent.com/u/738761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ovatsus",
      "html_url": "https://github.com/ovatsus",
      "followers_url": "https://api.github.com/users/ovatsus/followers",
      "following_url": "https://api.github.com/users/ovatsus/following{/other_user}",
      "gists_url": "https://api.github.com/users/ovatsus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ovatsus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ovatsus/subscriptions",
      "organizations_url": "https://api.github.com/users/ovatsus/orgs",
      "repos_url": "https://api.github.com/users/ovatsus/repos",
      "events_url": "https://api.github.com/users/ovatsus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ovatsus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 27673449,
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-docs",
        "name": "type-docs",
        "color": "F13C76",
        "default": false
      },
      {
        "id": 67275458,
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-12-10T19:38:45Z",
    "updated_at": "2017-12-10T19:39:58Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "FSharp.Charting is a bit stale and can't run outside of Windows due to the Windows Forms dependency, I think it would be better to use XPlot"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1113",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1113/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1113/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1113/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1113",
    "id": 280772252,
    "number": 1113,
    "title": "XmlProvider constructor: Mutable true/false",
    "user": {
      "login": "TonyHenrique",
      "id": 6307623,
      "avatar_url": "https://avatars3.githubusercontent.com/u/6307623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TonyHenrique",
      "html_url": "https://github.com/TonyHenrique",
      "followers_url": "https://api.github.com/users/TonyHenrique/followers",
      "following_url": "https://api.github.com/users/TonyHenrique/following{/other_user}",
      "gists_url": "https://api.github.com/users/TonyHenrique/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TonyHenrique/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TonyHenrique/subscriptions",
      "organizations_url": "https://api.github.com/users/TonyHenrique/orgs",
      "repos_url": "https://api.github.com/users/TonyHenrique/repos",
      "events_url": "https://api.github.com/users/TonyHenrique/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TonyHenrique/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-12-10T01:20:49Z",
    "updated_at": "2017-12-10T01:20:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Is there an way to copy constructors on F#?\r\n\r\nor can we have an option on the XmlProvider<Mutable=true/false to generate classes with mutable properties?\r\n\r\nor can XmlProvider generate Records instead of classes with constructors?\r\n\r\nI am trying to use it to generate XML\r\n\r\n    //let x = { n with InfNFe = i }          // error FS0039: The record label 'InfNFe' is not defined\r\n    //let x ({ infNFe = i } : nfe.NFe) = n   // error FS0039: The record label 'InfNFe' is not defined\r\n    let x = nfe.NFe(i, n.InfNFeSupl, n.Signature)\r\n\r\n\r\nSee\r\nhttps://stackoverflow.com/questions/47730120/f-the-record-label-infnfe-is-not-defined?noredirect=1#comment82430153_47730120"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1109",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1109/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1109/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1109/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1109",
    "id": 278817029,
    "number": 1109,
    "title": "Allow to disable inferring columns with only 0 and 1 as boolean, to be integers instead",
    "user": {
      "login": "ovatsus",
      "id": 738761,
      "avatar_url": "https://avatars1.githubusercontent.com/u/738761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ovatsus",
      "html_url": "https://github.com/ovatsus",
      "followers_url": "https://api.github.com/users/ovatsus/followers",
      "following_url": "https://api.github.com/users/ovatsus/following{/other_user}",
      "gists_url": "https://api.github.com/users/ovatsus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ovatsus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ovatsus/subscriptions",
      "organizations_url": "https://api.github.com/users/ovatsus/orgs",
      "repos_url": "https://api.github.com/users/ovatsus/repos",
      "events_url": "https://api.github.com/users/ovatsus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ovatsus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-12-03T20:32:17Z",
    "updated_at": "2017-12-03T20:32:17Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Sometimes it's very useful, but sometimes it's very annoying"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1108",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1108/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1108/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1108/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1108",
    "id": 278816987,
    "number": 1108,
    "title": "Support for arrays in Csv columns",
    "user": {
      "login": "ovatsus",
      "id": 738761,
      "avatar_url": "https://avatars1.githubusercontent.com/u/738761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ovatsus",
      "html_url": "https://github.com/ovatsus",
      "followers_url": "https://api.github.com/users/ovatsus/followers",
      "following_url": "https://api.github.com/users/ovatsus/following{/other_user}",
      "gists_url": "https://api.github.com/users/ovatsus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ovatsus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ovatsus/subscriptions",
      "organizations_url": "https://api.github.com/users/ovatsus/orgs",
      "repos_url": "https://api.github.com/users/ovatsus/repos",
      "events_url": "https://api.github.com/users/ovatsus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ovatsus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-12-03T20:31:42Z",
    "updated_at": "2017-12-03T20:31:42Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "For example, we can have a comma separated file, where one of the columns has strings separated by `|`"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1107",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1107/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1107/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1107/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1107",
    "id": 278816871,
    "number": 1107,
    "title": "Enter doesn't work as a separator in the Schema parameter of CsvProvider",
    "user": {
      "login": "ovatsus",
      "id": 738761,
      "avatar_url": "https://avatars1.githubusercontent.com/u/738761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ovatsus",
      "html_url": "https://github.com/ovatsus",
      "followers_url": "https://api.github.com/users/ovatsus/followers",
      "following_url": "https://api.github.com/users/ovatsus/following{/other_user}",
      "gists_url": "https://api.github.com/users/ovatsus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ovatsus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ovatsus/subscriptions",
      "organizations_url": "https://api.github.com/users/ovatsus/orgs",
      "repos_url": "https://api.github.com/users/ovatsus/repos",
      "events_url": "https://api.github.com/users/ovatsus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ovatsus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-12-03T20:30:24Z",
    "updated_at": "2017-12-03T20:30:24Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Would be useful to be able to write\r\n\r\n\r\n        CsvProvider<\r\n            HasHeaders=false,\r\n            Schema=\"\"\"Prefix\r\n                      Suggestion\r\n                      Market\r\n                      ...\"\"\">\r\n\r\ninstead of \r\n\r\n      CsvProvider<\r\n          \"Statistics.tsv\",\r\n          HasHeaders=false,\r\n          Schema=\"Prefix,Suggestion,Market,...\">"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1105",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1105/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1105/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1105/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1105",
    "id": 278558761,
    "number": 1105,
    "title": "CsvProvider.Load loads relative to executable not current working directory",
    "user": {
      "login": "daz10000",
      "id": 6342645,
      "avatar_url": "https://avatars2.githubusercontent.com/u/6342645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daz10000",
      "html_url": "https://github.com/daz10000",
      "followers_url": "https://api.github.com/users/daz10000/followers",
      "following_url": "https://api.github.com/users/daz10000/following{/other_user}",
      "gists_url": "https://api.github.com/users/daz10000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daz10000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daz10000/subscriptions",
      "organizations_url": "https://api.github.com/users/daz10000/orgs",
      "repos_url": "https://api.github.com/users/daz10000/repos",
      "events_url": "https://api.github.com/users/daz10000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daz10000/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-12-01T18:45:58Z",
    "updated_at": "2017-12-27T02:57:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "This may be by design? but I just ran into an odd case which broke the user experience for a bunch of people.   I have a program using CsvProvider that uses the Load method and a relative path is used to load a file.   The attempted load path is relative to the location of the executable not the current working directory (win10,  gitbash shell).   For example\r\n\r\n```\r\ncurrent folder\r\n     subfolderA\r\n       subfolderB\r\n          mytool.exe\r\n\r\n    subfolderC\r\n       datafile.txt\r\n\r\n```\r\nInvoking a load from the current folder `subfolderA/subfolderB/mytool.exe  subfolderC/datafile.txt`    where the path is passed into CsvProvider.Load  would result in an attempt to load `subfolderA/subfolderB/subFolderC/datafile.txt` instead of `subFolderC/datafile.txt`    \r\n\r\nI consider that to be a bug (other methods like File.ReadAllText(relativePath) will produce the expected result),  but maybe there's a reason for those sematics  ?  (you won't notice if you run in same folder as the binary).    I did a workaround using the File.ReadAllText method and the .Parse method of CsvProvider but it's a bit annoying\r\n\r\nDarren\r\nFSharp.Data 2.4.2"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1102",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1102/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1102/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1102/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1102",
    "id": 273446065,
    "number": 1102,
    "title": "Make HtmlAttribute and HtmlNode accessible",
    "user": {
      "login": "nojaf",
      "id": 2621499,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2621499?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nojaf",
      "html_url": "https://github.com/nojaf",
      "followers_url": "https://api.github.com/users/nojaf/followers",
      "following_url": "https://api.github.com/users/nojaf/following{/other_user}",
      "gists_url": "https://api.github.com/users/nojaf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nojaf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nojaf/subscriptions",
      "organizations_url": "https://api.github.com/users/nojaf/orgs",
      "repos_url": "https://api.github.com/users/nojaf/repos",
      "events_url": "https://api.github.com/users/nojaf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nojaf/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-11-13T14:22:20Z",
    "updated_at": "2017-12-03T18:30:19Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I'm trying to create script that parse some html to another format.\r\n\r\n```fsharp\r\n#r \"./packages/FSharp.Data/lib/net45/FSharp.Data.dll\"\r\n\r\nopen FSharp.Data\r\nopen System\r\n\r\nlet input = \"<h1>Test <strong>one</strong> two</h1><ul><li>one</li><li>two</li><li>three</li>\"\r\n\r\nlet html = HtmlNode.Parse input\r\n\r\nlet processHtmlNode (node:HtmlNode) =\r\n    match node with\r\n    | HtmlElement(name, attributes, elements) ->\r\n        sprintf \"%s [%s] []\" name attrs\r\n    | HtmlText content ->\r\n        sprintf \"str \\\"%s\\\"\" content\r\n    | HtmlComment content -> \r\n        sprintf \"comment  \\\"%s\\\"\" content\r\n    | HtmlCData content ->\r\n        \"CData is deprecated in HTML5\"\r\n\r\nList.head html\r\n|> processHtmlNode\r\n```\r\n\r\nRunning this in the repl gives me an error that `html.fsx(13,7): error FS1093: The union cases or fields of the type 'HtmlNode' are not accessible from this code location`.\r\n\r\nI believe this is due to the internal keyword on [line 17](https://github.com/fsharp/FSharp.Data/blob/master/src/Html/HtmlParser.fs#L17) and [line 31](https://github.com/fsharp/FSharp.Data/blob/master/src/Html/HtmlParser.fs#L31).\r\n\r\nWould it be ok if I sent in a PR to remove the internal keyword there? Or do I have other options here?"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1100",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1100/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1100/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1100/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1100",
    "id": 272602295,
    "number": 1100,
    "title": "Configure default DateTimeKind when no timezone information given",
    "user": {
      "login": "2moveit",
      "id": 2593392,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2593392?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/2moveit",
      "html_url": "https://github.com/2moveit",
      "followers_url": "https://api.github.com/users/2moveit/followers",
      "following_url": "https://api.github.com/users/2moveit/following{/other_user}",
      "gists_url": "https://api.github.com/users/2moveit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/2moveit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/2moveit/subscriptions",
      "organizations_url": "https://api.github.com/users/2moveit/orgs",
      "repos_url": "https://api.github.com/users/2moveit/repos",
      "events_url": "https://api.github.com/users/2moveit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/2moveit/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-11-09T15:21:54Z",
    "updated_at": "2017-11-10T07:06:04Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "All TypeProviders will convert the DateTime string`\"03.01.2016 00:00:00\"` automatically to `DateTimeKind.Local`. \r\nhttps://github.com/fsharp/FSharp.Data/blob/b5df1ca30f5bb7749c4fd340b61f1b7fc43fb547/src/CommonRuntime/TextConversions.fs#L103-L104\r\n\r\nI think it's correct that it is set to `DateTimeKind.Local` as of ISO 8601 although the default of .NET `DateTime()` is `Kind.Unspecified`.\r\nAlthough you're not doing it explicitly you usually want to use it that way and in 90% of the case it will be correct.\r\n\r\nIn my case I get a CSV file for price lists from different countries (timezones). The date has the mentioned form `\"03.01.2016 00:00:00\"`. \r\nSo there is no information about the timezone. Although the other system should've used the ISO 8601 format there are many reasons that this might happen especially when using the .NET DateTime class and not being aware of timezones.\r\n\r\nAs mentioned there are edge cases where you have to do an additional manual convertion to set it to `DateTimeKind.Unspecified`. E.g by `new DateTime(old.Year, old.Month, old.Day)`.\r\nThat is a little bit hacky and so I like to be able to configure the TypeProvider to use `Kind.Unspecified` as default if the there is no information of the timezone given.\r\nSo my suggestion is to make this configurable when initializing the TypeProvider.\r\n\r\n\r\nBefore trying to contribute (where I might need your help) I'd like to discuss this before starting it as it will effect all TypeProviders. Suggestions how to implement it are welcome."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1098",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1098/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1098/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1098/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1098",
    "id": 268823312,
    "number": 1098,
    "title": "HtmlProvider Tables parsing not working correctly when there's additional attributes",
    "user": {
      "login": "KoenigLear",
      "id": 19749651,
      "avatar_url": "https://avatars1.githubusercontent.com/u/19749651?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KoenigLear",
      "html_url": "https://github.com/KoenigLear",
      "followers_url": "https://api.github.com/users/KoenigLear/followers",
      "following_url": "https://api.github.com/users/KoenigLear/following{/other_user}",
      "gists_url": "https://api.github.com/users/KoenigLear/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KoenigLear/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KoenigLear/subscriptions",
      "organizations_url": "https://api.github.com/users/KoenigLear/orgs",
      "repos_url": "https://api.github.com/users/KoenigLear/repos",
      "events_url": "https://api.github.com/users/KoenigLear/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KoenigLear/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 27553778,
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-bug",
        "name": "type-bug",
        "color": "6E0069",
        "default": false
      },
      {
        "id": 67275458,
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-10-26T16:15:08Z",
    "updated_at": "2018-01-11T02:14:03Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "The table in your data tests fails as soon you add attributes e.g. align, border etc.  \r\n`<table` title=\"table\" align=\"center\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n\r\nBy fails I mean that using the type provider html = typeA.load(\"html\").Tables is empty.  It's expected that it would return a table.\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1096",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1096/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1096/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1096/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1096",
    "id": 268411533,
    "number": 1096,
    "title": "Add cssSelect to HtmlNode",
    "user": {
      "login": "Regent",
      "id": 220614,
      "avatar_url": "https://avatars3.githubusercontent.com/u/220614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Regent",
      "html_url": "https://github.com/Regent",
      "followers_url": "https://api.github.com/users/Regent/followers",
      "following_url": "https://api.github.com/users/Regent/following{/other_user}",
      "gists_url": "https://api.github.com/users/Regent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Regent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Regent/subscriptions",
      "organizations_url": "https://api.github.com/users/Regent/orgs",
      "repos_url": "https://api.github.com/users/Regent/repos",
      "events_url": "https://api.github.com/users/Regent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Regent/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-10-25T14:06:32Z",
    "updated_at": "2017-12-04T19:03:40Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "If we move/add `cssSelect` to `HtmlNode` then we could enable better type inference when working with nodes in functions:\r\n```fsharp\r\nnode |> HtmlNode.cssSelect \"tr\"\r\n```"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1082",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1082/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1082/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1082/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1082",
    "id": 263714161,
    "number": 1082,
    "title": "[Http.fs bug] error with uploading request body",
    "user": {
      "login": "saneman1",
      "id": 763246,
      "avatar_url": "https://avatars0.githubusercontent.com/u/763246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saneman1",
      "html_url": "https://github.com/saneman1",
      "followers_url": "https://api.github.com/users/saneman1/followers",
      "following_url": "https://api.github.com/users/saneman1/following{/other_user}",
      "gists_url": "https://api.github.com/users/saneman1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saneman1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saneman1/subscriptions",
      "organizations_url": "https://api.github.com/users/saneman1/orgs",
      "repos_url": "https://api.github.com/users/saneman1/repos",
      "events_url": "https://api.github.com/users/saneman1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saneman1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 27553778,
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-bug",
        "name": "type-bug",
        "color": "6E0069",
        "default": false
      },
      {
        "id": 67275458,
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-10-08T12:25:11Z",
    "updated_at": "2017-12-03T18:27:22Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I do PUT http request with some  body, size about 1MB.\r\nThe server immediately responds with error status code (409 Conflict), I see it in the traces. After upload of the request body is complete, an error occurs:\r\n\r\nWebException: The underlying connection was closed: An unexpected error occurred on a receive.\r\n  IOException: Unable to read data from the transport connection\r\n\r\nexception raised at function [getResponseFromBeginEnd](https://github.com/fsharp/FSharp.Data/blob/master/src/Net/Http.fs#L1311)\r\n\r\nWhen size of payload request body less 1MB all ok. \r\nThe cause of the problem the following - by the end of the uploading body server already closes the connection.\r\n\r\nHow can I work around this issue and retrieve the actual response from the server?\r\n\r\nthx, for the library, very usefull !"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1080",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1080/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1080/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1080/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1080",
    "id": 263537208,
    "number": 1080,
    "title": "CsvFile.Load doesn't use current directory from system.environment",
    "user": {
      "login": "ovatsus",
      "id": 738761,
      "avatar_url": "https://avatars1.githubusercontent.com/u/738761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ovatsus",
      "html_url": "https://github.com/ovatsus",
      "followers_url": "https://api.github.com/users/ovatsus/followers",
      "following_url": "https://api.github.com/users/ovatsus/following{/other_user}",
      "gists_url": "https://api.github.com/users/ovatsus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ovatsus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ovatsus/subscriptions",
      "organizations_url": "https://api.github.com/users/ovatsus/orgs",
      "repos_url": "https://api.github.com/users/ovatsus/repos",
      "events_url": "https://api.github.com/users/ovatsus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ovatsus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 27553778,
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-bug",
        "name": "type-bug",
        "color": "6E0069",
        "default": false
      },
      {
        "id": 67275458,
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-10-06T18:44:36Z",
    "updated_at": "2017-10-13T13:46:52Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "I can do this:\r\n\r\n    open System.IO\r\n    System.Environment.CurrentDirectory <- __SOURCE_DIRECTORY__\r\n    File.ReadAllLines(\"filename\")\r\n\r\nand it picks up __SOURCE_DIRECTORY__\\filename\r\n\r\nbut if I do this:\r\n\r\n    CsvFile.Load \"filename\"\r\n\r\nIt will try to load `C:\\Program Files (x86)\\Microsoft SDKs\\F#\\4.1\\Framework\\v4.0\\filename`"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1073",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1073/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1073/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1073/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1073",
    "id": 259081192,
    "number": 1073,
    "title": "Documentation ambiguity for JsonProvider",
    "user": {
      "login": "saschanaz",
      "id": 3396686,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3396686?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saschanaz",
      "html_url": "https://github.com/saschanaz",
      "followers_url": "https://api.github.com/users/saschanaz/followers",
      "following_url": "https://api.github.com/users/saschanaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/saschanaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/saschanaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/saschanaz/subscriptions",
      "organizations_url": "https://api.github.com/users/saschanaz/orgs",
      "repos_url": "https://api.github.com/users/saschanaz/repos",
      "events_url": "https://api.github.com/users/saschanaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/saschanaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-09-20T08:27:33Z",
    "updated_at": "2017-09-20T08:27:33Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "On the paragraph [_Parsing Twitter stream_](http://fsharp.github.io/FSharp.Data/library/JsonProvider.html):\r\n\r\n>After creating the `Tweet` type, we parse a single sample tweet and print some details about the tweet. As you can see, the `tweet.User` property has been inferred as optional (meaning that a tweet might not have an author?) so we unsafely get the value using the `Value` property. The `RetweetCount` and `Text` properties may be also missing, so we also access them unsafely.\r\n\r\nNo, all those fields are not optional. If you see [the data](https://github.com/fsharp/FSharp.Data/blob/master/docs/content/data/TwitterStream.json) it contains `Tweet`s *and* some `delete` event objects of which structure is vastly different from the one of `Tweet`.\r\n\r\n```json\r\n{\"delete\":{\"status\":{\"id\":3179185988182016,\"id_str\":\"3179185988182016\",\"user_id_str\":\"126735178\",\"user_id\":126735178}}}\r\n```\r\n\r\nThis causes the type provider mark every field optional, which is not very useful..."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1072",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1072/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1072/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1072/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1072",
    "id": 258994559,
    "number": 1072,
    "title": "CsvProvider has no option to write dates without timezone information.",
    "user": {
      "login": "f4hy",
      "id": 36440,
      "avatar_url": "https://avatars1.githubusercontent.com/u/36440?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/f4hy",
      "html_url": "https://github.com/f4hy",
      "followers_url": "https://api.github.com/users/f4hy/followers",
      "following_url": "https://api.github.com/users/f4hy/following{/other_user}",
      "gists_url": "https://api.github.com/users/f4hy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/f4hy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/f4hy/subscriptions",
      "organizations_url": "https://api.github.com/users/f4hy/orgs",
      "repos_url": "https://api.github.com/users/f4hy/repos",
      "events_url": "https://api.github.com/users/f4hy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/f4hy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-09-19T23:24:05Z",
    "updated_at": "2017-09-19T23:24:05Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "The CsvProvider can give inconstant results if one does not need exact times, but just dates and the file is written and read in a different timezone.\r\n\r\n`type DateProbmes = CsvProvider<\"Name, Date\\n myname, 2017/09/19\">`\r\n\r\nIf you write such a file in UTC timezone, it will be written to a file as\r\n\r\n> myname,2017-09-19T00:00:00.0000000-00:00\r\n\r\nHowever if this file is then read somewhere in the US, it will give you some local time on 2017-09-18 !!\r\n\r\nWhen reading the csv file, without looking at the file some other way, there will be no way to know what timezone the file was written in so using just objects returned using CsvProvider you can't know if you want the date 09-18 or 09-19. \r\n\r\nIf the CsvProvider had a method to write the file with only `2017/09/19` then it would be read as the correct day in all local timezones.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1069",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1069/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1069/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1069/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/pull/1069",
    "id": 257829259,
    "number": 1069,
    "title": "[WIP] First attempt for reaching json schema support",
    "user": {
      "login": "realvictorprm",
      "id": 25414896,
      "avatar_url": "https://avatars1.githubusercontent.com/u/25414896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/realvictorprm",
      "html_url": "https://github.com/realvictorprm",
      "followers_url": "https://api.github.com/users/realvictorprm/followers",
      "following_url": "https://api.github.com/users/realvictorprm/following{/other_user}",
      "gists_url": "https://api.github.com/users/realvictorprm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/realvictorprm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/realvictorprm/subscriptions",
      "organizations_url": "https://api.github.com/users/realvictorprm/orgs",
      "repos_url": "https://api.github.com/users/realvictorprm/repos",
      "events_url": "https://api.github.com/users/realvictorprm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/realvictorprm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-09-14T19:25:31Z",
    "updated_at": "2017-12-03T23:10:16Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/fsharp/FSharp.Data/pulls/1069",
      "html_url": "https://github.com/fsharp/FSharp.Data/pull/1069",
      "diff_url": "https://github.com/fsharp/FSharp.Data/pull/1069.diff",
      "patch_url": "https://github.com/fsharp/FSharp.Data/pull/1069.patch"
    },
    "body": "This is work in progress, I hope it's the right direction...\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1065",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1065/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1065/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1065/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1065",
    "id": 250831647,
    "number": 1065,
    "title": "Non-obvious behaviour when generating Json types from zero-valued decimals",
    "user": {
      "login": "BenHewins",
      "id": 11405253,
      "avatar_url": "https://avatars3.githubusercontent.com/u/11405253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BenHewins",
      "html_url": "https://github.com/BenHewins",
      "followers_url": "https://api.github.com/users/BenHewins/followers",
      "following_url": "https://api.github.com/users/BenHewins/following{/other_user}",
      "gists_url": "https://api.github.com/users/BenHewins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BenHewins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BenHewins/subscriptions",
      "organizations_url": "https://api.github.com/users/BenHewins/orgs",
      "repos_url": "https://api.github.com/users/BenHewins/repos",
      "events_url": "https://api.github.com/users/BenHewins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BenHewins/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-08-17T05:15:49Z",
    "updated_at": "2017-08-17T05:19:01Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi,\r\n\r\nWhen a sample is provided to the JsonProvider which has a value like 0.00, it currently defaults to generating an int. If you then try and parse json where that field is set to a decimal value it will be silently truncated:\r\n\r\n\r\n```fsharp\r\n> type Location = JsonProvider<\"\"\"{ \"x\" : 0.500, \"y\" : 0.000 }\"\"\">;;\r\ntype Location = JsonProvider<...>\r\n> let a = Location.Parse \"\"\"{ \"x\" : -0.250, \"y\" : 0.800 }\"\"\";;\r\nval a : JsonProvider<...>.Root = {\r\n  \"x\": -0.250,\r\n  \"y\": 0.800\r\n}\r\n> a.Y;;\r\nval it : int = 0\r\n```\r\n\r\n\r\nThis is also understandable behaviour, although I think that at least an option to warn/error on truncated values when parsing would be valuable. \r\n\r\nThe combination of these two behaviours creates examples like the above, which are reasonable but very easy to trip up on when the json is more complex than a couple of fields. At the moment this is easy enough to deal with by changing the values in the sample, but I think that the experience could be improved. Personally I think that erroring when trying to parse a decimal as an int would be a good solution but I may be missing something (other than it being a breaking change)."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1064",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1064/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1064/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1064/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1064",
    "id": 250712788,
    "number": 1064,
    "title": "HTML sample references decommissioned site",
    "user": {
      "login": "dsyme",
      "id": 7204669,
      "avatar_url": "https://avatars1.githubusercontent.com/u/7204669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsyme",
      "html_url": "https://github.com/dsyme",
      "followers_url": "https://api.github.com/users/dsyme/followers",
      "following_url": "https://api.github.com/users/dsyme/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsyme/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsyme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsyme/subscriptions",
      "organizations_url": "https://api.github.com/users/dsyme/orgs",
      "repos_url": "https://api.github.com/users/dsyme/repos",
      "events_url": "https://api.github.com/users/dsyme/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsyme/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-16T18:08:59Z",
    "updated_at": "2017-12-03T18:38:04Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "the docs here:\r\n\r\nhttps://github.com/fsharp/FSharp.Data/blob/master/docs/content/library/HtmlProvider.fsx\r\n\r\nreference https://www.bmreports.com/servletcom.logica.neta.bwp_MarketDepthServlet which has been [decommissioned](https://www.elexon.co.uk/change/new-balancing-mechanism-reporting-service-bmrs/)\r\n\r\nThe code below would be an adequate replacement, though the reference HTML data used for type checking should be downloaded and used as schema\r\n```\r\n\r\ntype MarketDepth = HtmlProvider<\"https://www.bmreports.com/bmrs/?q=balancing/systemsellbuyprices\">\r\n\r\nlet mrktDepthData = MarketDepth.GetSample()\r\n\r\nlet mrktDepthTable = mrktDepthData.Tables.MyTable1\r\n\r\n//for row in mrktDepthTable.Rows do \r\n//   row.\r\n\r\n// Look at the most recent row. Note the 'Date' property\r\n// is of type 'DateTime' and 'Open' has a type 'decimal'\r\nlet firstRow = mrktDepthTable.Rows.[0]\r\nlet settlementDate = firstRow.``Settlement Date``\r\nlet acceptedBid = firstRow.ABV\r\nlet acceptedOffer = firstRow.ASV\r\n\r\n// Print the bid / offer volumes for each row\r\nfor row in mrktDepthTable.Rows do\r\n  printfn \"Bid/Offer: (%A, %A, %A)\" row.``Settlement Date`` row.ABV row.ASV\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1062",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1062/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1062/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1062/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1062",
    "id": 245905086,
    "number": 1062,
    "title": "Why does this code crash when executed a second time in FSI?",
    "user": {
      "login": "Soldalma",
      "id": 4109144,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4109144?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Soldalma",
      "html_url": "https://github.com/Soldalma",
      "followers_url": "https://api.github.com/users/Soldalma/followers",
      "following_url": "https://api.github.com/users/Soldalma/following{/other_user}",
      "gists_url": "https://api.github.com/users/Soldalma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Soldalma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Soldalma/subscriptions",
      "organizations_url": "https://api.github.com/users/Soldalma/orgs",
      "repos_url": "https://api.github.com/users/Soldalma/repos",
      "events_url": "https://api.github.com/users/Soldalma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Soldalma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-07-27T02:04:47Z",
    "updated_at": "2017-07-27T02:04:47Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I left the comment below on StackOverflow and two prominent contributors, rmunn and Fyodor Soikin, suggested I report it as a bug.\r\n\r\nI have some code that generates an exception the second time  it is executed in FSI.\r\n\r\nThe sequence is the following:  \r\n\r\n1) Select all lines above it, run on FSI using Alt+Enter.  \r\n\r\n2) Select the code, run on FSI using Alt+Enter. So far no errors.  \r\n\r\n3) Run the selected code again by hitting Alt+Enter. Error (see below).  \r\n\r\nHere are the lines of code generating this behavior: \r\n\r\nlet assetsMap  =\r\n    assetInfo.Rows\r\n    |> Seq.filter (fun (rw: AssetsInfo.Row) -> Set.contains rw.Ticker assetsTickerSet)\r\n    |> List.ofSeq\r\n    > List.map (fun rw -> rw.Ticker, Asset.constructor rw) // Frame.ReadCSV called here\r\n    |> Map.ofSeq  Relevant info:  type AssetsInfo = FSharp.Data.CsvProvider<...>   \r\n\r\nError message: \r\n\r\nSystem.InvalidOperationException: tried to skip The input sequence has an insufficient number of elements. 1 past the end of the seq    at Microsoft.FSharp.Collections.SeqModule.Skip@1316.GenerateNext(IEnumerable`1& next)    at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl()    at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System-Collections-IEnumerator-MoveNext()    at FSharp.Data.Runtime.CsvHelpers.parseIntoTypedRows@176.GenerateNext(IEnumerable`1& next) in C:\\Git\\FSharp.Data\\src\\Csv\\CsvRuntime.fs:line 176    at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl()    at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System-Collections-IEnumerator-MoveNext()    at Microsoft.FSharp.Collections.Internal.IEnumerator.next@187[T](FSharpFunc`2 f, IEnumerator`1 e, FSharpRef`1 started, Unit unitVar0)    at Microsoft.FSharp.Collections.Internal.IEnumerator.filter@182.System-Collections-IEnumerator-MoveNext()    at Microsoft.FSharp.Collections.SeqModule.ToList[T](IEnumerable`1 source)    at <StartupCode$FSI_0035>.$FSI_0035.main@() in H:\\Dropbox\\BitBucket\\VSProjects\\Fractal10\\Fractal10\\Program.fs:line 139 Stopped due to error\r\n-- | --\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1060",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1060/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1060/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1060/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1060",
    "id": 241275550,
    "number": 1060,
    "title": "Long term: Simplifying to just .NET Standard 2.0?",
    "user": {
      "login": "dsyme",
      "id": 7204669,
      "avatar_url": "https://avatars1.githubusercontent.com/u/7204669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsyme",
      "html_url": "https://github.com/dsyme",
      "followers_url": "https://api.github.com/users/dsyme/followers",
      "following_url": "https://api.github.com/users/dsyme/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsyme/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsyme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsyme/subscriptions",
      "organizations_url": "https://api.github.com/users/dsyme/orgs",
      "repos_url": "https://api.github.com/users/dsyme/repos",
      "events_url": "https://api.github.com/users/dsyme/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsyme/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2017-07-07T14:09:23Z",
    "updated_at": "2017-10-28T06:00:20Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "This is a long term thing about how we're simplifying type providers.  There's no immediate action required\r\n\r\nWe've completed the work in the F# compiler and compiler service to [support \".NET Standard 2.0\" libraries and type providers](https://github.com/Microsoft/visualfsharp/pull/3307).  These improvements will gradually be rolled out into compilers and editors (that will take a while, as you can imagine). I tested this work primarily with FSharp.Data.\r\n\r\nOnce this becomes widely available I believe we will be able to move to a world where FSharp.Data has only two DLLs in its nuget package, like this:\r\n```\r\n    lib/netstandard2.0/FSharp.Data.dll\r\n    lib/netstandard2.0/FSharp.Data.DesignTime.dll\r\n```\r\nI've checked and **all** of FSharp.Data compiles and passes tests when compiled as a .NET Standard 2.0 library.  No ``#if`` are needed.  [The branch I did this in is here](https://github.com/fsharp/FSharp.Data/compare/master...dsyme:ns2?expand=1), and it includes the work to convert to .NET SDK 2.0 project files if you want to take a look at how to do this, e.g. for [FSharp.Data.DesignTime.fsproj](https://github.com/fsharp/FSharp.Data/compare/master...dsyme:ns2?expand=1#diff-c64e6937c9d61836ece07888b82ad1a8) (this branch assumes an install of .NET SDK 2.0 preview2 or after, and consuming it requires the fixes in the F# compiler linked above)\r\n\r\nNote that .NET Standard 2.0 libraries are supported by Mono 5.0 and .NET 4.6.1 and above, and .NET Core App 2.0 and above.   If we wanted to continue to be able to reach earlier runtimes profiles with new versions of FSharp.Data then we could also add a netstandard1.6 runtime DLL.  The designtime DLL should continue to be netstandard2.0.  If not, people who want to target those platforms can just use existing versions of the FSHarp.Data package\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1058",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1058/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1058/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1058/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1058",
    "id": 240469061,
    "number": 1058,
    "title": "Heads up: What to do if a .NET SDK 2.0-style project file references a type provider like FSharp.Data ",
    "user": {
      "login": "dsyme",
      "id": 7204669,
      "avatar_url": "https://avatars1.githubusercontent.com/u/7204669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsyme",
      "html_url": "https://github.com/dsyme",
      "followers_url": "https://api.github.com/users/dsyme/followers",
      "following_url": "https://api.github.com/users/dsyme/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsyme/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsyme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsyme/subscriptions",
      "organizations_url": "https://api.github.com/users/dsyme/orgs",
      "repos_url": "https://api.github.com/users/dsyme/repos",
      "events_url": "https://api.github.com/users/dsyme/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsyme/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-07-04T17:02:52Z",
    "updated_at": "2017-07-04T21:51:41Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "Just a heads up about an issue https://github.com/Microsoft/visualfsharp/issues/3303 which may affect some users of FSharp.Data\r\n\r\nWith the imminent arrival of .NET SDK 2.0, people are starting to use new .NET SDK-style project files even for .NET Framework programming.  A typical project file looks like this:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"Program.fs\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"FSharp.Data\" Version=\"3.2.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nThat's it. For the majority of F# code nothing else (besides an install of the .NET SDK) will be required to compile your code.  It's really a very nice and simple story and a lot of people will start converting their F# code to use this new project file format.\r\n\r\nHowever, there is an issue where the F# compiler that ships as part of the .NET SDK doesn't yet correctly support type providers, and so if you use type providers in your project then you need to apply one of the workarounds as listed in https://github.com/Microsoft/visualfsharp/issues/3303. Basically right now you need force the project to use an install of an F# compiler running on .NET Framework/Mono. When that compiler is used instead, then type providers are supported. There are a couple of ways to achieve this as described in that issue.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1055",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1055/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1055/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1055/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1055",
    "id": 230037217,
    "number": 1055,
    "title": "ContentType HttpContentTypes.Json fails to specify UTF-8",
    "user": {
      "login": "brianberns",
      "id": 11883138,
      "avatar_url": "https://avatars3.githubusercontent.com/u/11883138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brianberns",
      "html_url": "https://github.com/brianberns",
      "followers_url": "https://api.github.com/users/brianberns/followers",
      "following_url": "https://api.github.com/users/brianberns/following{/other_user}",
      "gists_url": "https://api.github.com/users/brianberns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brianberns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brianberns/subscriptions",
      "organizations_url": "https://api.github.com/users/brianberns/orgs",
      "repos_url": "https://api.github.com/users/brianberns/repos",
      "events_url": "https://api.github.com/users/brianberns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brianberns/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 67275458,
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-05-19T17:20:31Z",
    "updated_at": "2017-12-06T10:55:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "JSON is typically serialized as UTF-8. However, there doesn't appear to be any convenient way to specify this in an `HttpRequest`. Workaround is to manually spell out `Content-Type: application/json; charset=utf-8` in the `headers` list instead, which defeats the purpose of having enumerated `HttpContentTypes`."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1046",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1046/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1046/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1046/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1046",
    "id": 220939637,
    "number": 1046,
    "title": "[CSV Type provider] are the type provider supposed to load and return lines in order?",
    "user": {
      "login": "mastoj",
      "id": 501424,
      "avatar_url": "https://avatars1.githubusercontent.com/u/501424?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mastoj",
      "html_url": "https://github.com/mastoj",
      "followers_url": "https://api.github.com/users/mastoj/followers",
      "following_url": "https://api.github.com/users/mastoj/following{/other_user}",
      "gists_url": "https://api.github.com/users/mastoj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mastoj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mastoj/subscriptions",
      "organizations_url": "https://api.github.com/users/mastoj/orgs",
      "repos_url": "https://api.github.com/users/mastoj/repos",
      "events_url": "https://api.github.com/users/mastoj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mastoj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-04-11T12:45:59Z",
    "updated_at": "2017-04-11T17:47:31Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I loaded a file of ~100MB and it reported an error on line X. I did a lookup on line X and a couple of lines before and after but couldn't see any error. When I parsed line X manually with the type provider it passed. Also, when iterating over the `Rows` property it doesn't look like the ordering is the same as when I just iterating over the lines in the file.\r\n\r\nCan I expect the `Rows` to be in the same order as in the file?"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1040",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1040/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1040/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1040/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/1040",
    "id": 219772863,
    "number": 1040,
    "title": "Http.Request fails with \"part of the cookie is invalid\" on VSTS API",
    "user": {
      "login": "kberridge",
      "id": 178916,
      "avatar_url": "https://avatars3.githubusercontent.com/u/178916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kberridge",
      "html_url": "https://github.com/kberridge",
      "followers_url": "https://api.github.com/users/kberridge/followers",
      "following_url": "https://api.github.com/users/kberridge/following{/other_user}",
      "gists_url": "https://api.github.com/users/kberridge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kberridge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kberridge/subscriptions",
      "organizations_url": "https://api.github.com/users/kberridge/orgs",
      "repos_url": "https://api.github.com/users/kberridge/repos",
      "events_url": "https://api.github.com/users/kberridge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kberridge/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-04-06T02:57:23Z",
    "updated_at": "2017-04-06T02:57:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "When I query the Visual Studio Team Services (VSTS) API:\r\n\r\n`Http.RequestString(\"https://organization.visualstudio.com/DefaultCollection/Project/_apis/wit/queries\", headers = [ \"Authorization\", \"Basic base64encodeduseraccesstoken\"])`\r\n\r\nI get the following error:\r\n\r\n```\r\nUnhandled Exception: System.Net.CookieException: The 'Value'='{\"PersistentSessionId\":\"3cd7392c-35f2-4fac-a31a-533d33d6ca6f\",\"PendingAuthenticationSessionId\":\"0\r\n0000000-0000-0000-0000-000000000000\",\"CurrentAuthenticationSessionId\":\"00000000-0000-0000-0000-000000000000\"}' part of the cookie is invalid.\r\n   at System.Net.Cookie.VerifySetDefaults(CookieVariant variant, Uri uri, Boolean isLocalDomain, String localDomain, Boolean set_default, Boolean isThrow)\r\n   at System.Net.CookieContainer.Add(Uri uri, Cookie cookie)\r\n   at <StartupCode$FSharp-Data>.$Http.InnerRequest@930-5.Invoke(WebResponse _arg2) in C:\\Git\\FSharp.Data\\src\\Net\\Http.fs:line 938\r\n   at Microsoft.FSharp.Control.AsyncBuilderImpl.args@825-1.Invoke(a a)\r\n```\r\n\r\nI switched to WebClient.DownloadString() and that is working.  I also tried it in Postman hoping I could attach some more information about what the server is returning but Postman says the server didn't return a cookie.\r\n\r\nI also found this possibly related open issue #982, but that error was \"The 'Name'='' part of the cookie is invalid.\" which seemed different enough so I thought opening a new issue was the right move."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1039",
    "repository_url": "https://api.github.com/repos/fsharp/FSharp.Data",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1039/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1039/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/1039/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/pull/1039",
    "id": 215126364,
    "number": 1039,
    "title": "Fix for #953",
    "user": {
      "login": "DmitryBatalov",
      "id": 961510,
      "avatar_url": "https://avatars3.githubusercontent.com/u/961510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DmitryBatalov",
      "html_url": "https://github.com/DmitryBatalov",
      "followers_url": "https://api.github.com/users/DmitryBatalov/followers",
      "following_url": "https://api.github.com/users/DmitryBatalov/following{/other_user}",
      "gists_url": "https://api.github.com/users/DmitryBatalov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DmitryBatalov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DmitryBatalov/subscriptions",
      "organizations_url": "https://api.github.com/users/DmitryBatalov/orgs",
      "repos_url": "https://api.github.com/users/DmitryBatalov/repos",
      "events_url": "https://api.github.com/users/DmitryBatalov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DmitryBatalov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-03-17T21:25:58Z",
    "updated_at": "2017-09-20T12:32:42Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/fsharp/FSharp.Data/pulls/1039",
      "html_url": "https://github.com/fsharp/FSharp.Data/pull/1039",
      "diff_url": "https://github.com/fsharp/FSharp.Data/pull/1039.diff",
      "patch_url": "https://github.com/fsharp/FSharp.Data/pull/1039.patch"
    },
    "body": "Hi, please have a look at my solution for issue #953."
  }
]